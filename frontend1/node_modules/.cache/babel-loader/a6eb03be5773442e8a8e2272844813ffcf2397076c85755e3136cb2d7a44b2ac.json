{"ast":null,"code":"var _jsxFileName = \"/home/berti/Desktop/my-app/frontend/src/components/Gallery.js\",\n  _s = $RefreshSig$();\n// Gallery.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Row } from 'react-bootstrap';\nimport AnimalCard from './AnimalCard';\nimport AnimalModal from './AnimalModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = ({\n  category\n}) => {\n  _s();\n  const [animals, setAnimals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAnimals = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5555/api/v1/${category}`);\n        setAnimals(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchAnimals();\n  }, [category]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [category.charAt(0).toUpperCase() + category.slice(1), \" Gallery\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: animals.map(animal => /*#__PURE__*/_jsxDEV(AnimalCard, {\n        animal: animal\n      }, animal.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), animals.map(animal => /*#__PURE__*/_jsxDEV(AnimalModal, {\n      animal: animal\n    }, animal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"M0Xofy0zNeyE+JD+LdFp//ZZ31c=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Row","AnimalCard","AnimalModal","jsxDEV","_jsxDEV","Gallery","category","_s","animals","setAnimals","loading","setLoading","error","setError","fetchAnimals","response","get","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","animal","id","_c","$RefreshReg$"],"sources":["/home/berti/Desktop/my-app/frontend/src/components/Gallery.js"],"sourcesContent":["// Gallery.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Row } from 'react-bootstrap';\nimport AnimalCard from './AnimalCard';\nimport AnimalModal from './AnimalModal';\n\nconst Gallery = ({ category }) => {\n  const [animals, setAnimals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAnimals = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5555/api/v1/${category}`);\n        setAnimals(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchAnimals();\n  }, [category]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <Container>\n      <h1>{category.charAt(0).toUpperCase() + category.slice(1)} Gallery</h1>\n      <Row>\n        {animals.map(animal => (\n          <AnimalCard key={animal.id} animal={animal} />\n        ))}\n      </Row>\n      {animals.map(animal => (\n        <AnimalModal key={animal.id} animal={animal} />\n      ))}\n    </Container>\n  );\n};\n\nexport default Gallery;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,gCAAgCV,QAAQ,EAAE,CAAC;QAC5EG,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;QACzBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;QACrBR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIZ,KAAK,EAAE,oBAAOR,OAAA;IAAAgB,QAAA,GAAK,SAAO,EAACR,KAAK;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACEpB,OAAA,CAACL,SAAS;IAAAqB,QAAA,gBACRhB,OAAA;MAAAgB,QAAA,GAAKd,QAAQ,CAACmB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGpB,QAAQ,CAACqB,KAAK,CAAC,CAAC,CAAC,EAAC,UAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEpB,OAAA,CAACJ,GAAG;MAAAoB,QAAA,EACDZ,OAAO,CAACoB,GAAG,CAACC,MAAM,iBACjBzB,OAAA,CAACH,UAAU;QAAiB4B,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLhB,OAAO,CAACoB,GAAG,CAACC,MAAM,iBACjBzB,OAAA,CAACF,WAAW;MAAiB2B,MAAM,EAAEA;IAAO,GAA1BA,MAAM,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACjB,EAAA,CApCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}