{"ast":null,"code":"var _jsxFileName = \"/home/berti/Desktop/my-app/frontend/src/pages/OneDogEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditDogForm = () => {\n  _s();\n  const [dog, setDog] = useState({\n    breed_group: '',\n    colors: [''],\n    description: '',\n    image: '',\n    lifespan: '',\n    name: '',\n    origin: '',\n    size: '',\n    temperament: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:5555/api/dogs/${id}`).then(response => setDog({\n      ...response.data,\n      colors: response.data.colors || ['']\n    })).catch(error => setError('Error fetching data: ' + error));\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDog(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleColorChange = (index, value) => {\n    const updatedColors = [...dog.colors];\n    updatedColors[index] = value || '';\n    setDog(prevState => ({\n      ...prevState,\n      colors: updatedColors\n    }));\n  };\n  const addColorField = () => {\n    setDog(prevState => ({\n      ...prevState,\n      colors: [...prevState.colors, '']\n    }));\n  };\n  const removeColorField = index => {\n    const filteredColors = dog.colors.filter((_, colorIndex) => colorIndex !== index);\n    setDog(prevState => ({\n      ...prevState,\n      colors: filteredColors\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5555/api/dogs/${id}`, dog);\n      navigate('/dogs');\n    } catch (error) {\n      setError('Error updating dog: ' + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: dog.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colors\",\n      children: [dog.colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: color,\n          onChange: e => handleColorChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeColorField(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addColorField,\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Dog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(EditDogForm, \"/pp9ASBSJ+RukWcNkRlF6u01O/M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditDogForm;\nexport default EditDogForm;\nvar _c;\n$RefreshReg$(_c, \"EditDogForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","EditDogForm","_s","dog","setDog","breed_group","colors","description","image","lifespan","name","origin","size","temperament","error","setError","id","navigate","get","then","response","data","catch","handleChange","e","value","target","prevState","handleColorChange","index","updatedColors","addColorField","removeColorField","filteredColors","filter","_","colorIndex","handleSubmit","preventDefault","put","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","color","onClick","_c","$RefreshReg$"],"sources":["/home/berti/Desktop/my-app/frontend/src/pages/OneDogEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst EditDogForm = () => {\n    const [dog, setDog] = useState({\n        breed_group: '',\n        colors: [''],\n        description: '',\n        image: '',\n        lifespan: '',\n        name: '',\n        origin: '',\n        size: '',\n        temperament: ''\n    });\n    const [error, setError] = useState('');\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios.get(`http://localhost:5555/api/dogs/${id}`)\n            .then(response => setDog({ ...response.data, colors: response.data.colors || [''] }))\n            .catch(error => setError('Error fetching data: ' + error));\n    }, [id]);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setDog(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const handleColorChange = (index, value) => {\n        const updatedColors = [...dog.colors];\n        updatedColors[index] = value || '';\n        setDog(prevState => ({ ...prevState, colors: updatedColors }));\n    };\n\n    const addColorField = () => {\n        setDog(prevState => ({ ...prevState, colors: [...prevState.colors, ''] }));\n    };\n\n    const removeColorField = index => {\n        const filteredColors = dog.colors.filter((_, colorIndex) => colorIndex !== index);\n        setDog(prevState => ({ ...prevState, colors: filteredColors }));\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        try {\n            await axios.put(`http://localhost:5555/api/dogs/${id}`, dog);\n            navigate('/dogs');\n        } catch (error) {\n            setError('Error updating dog: ' + error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {error && <p className=\"error\">{error}</p>}\n            <label>\n                Name:\n                <input type=\"text\" name=\"name\" value={dog.name} onChange={handleChange} />\n            </label>\n            {/* Repeat for other fields */}\n            <div className=\"colors\">\n                {dog.colors.map((color, index) => (\n                    <div key={index} className=\"color-field\">\n                        <input\n                            type=\"text\"\n                            value={color}\n                            onChange={e => handleColorChange(index, e.target.value)}\n                        />\n                        <button type=\"button\" onClick={() => removeColorField(index)}>Remove</button>\n                    </div>\n                ))}\n                <button type=\"button\" onClick={addColorField}>Add Color</button>\n            </div>\n            <button type=\"submit\">Update Dog</button>\n        </form>\n    );\n};\n\nexport default EditDogForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}